# <django_project>/docker-compose-debug.yml
version: '3.8'
services:
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - "15672"    
    env_file:
      - ./config/.env.broker
  
  db:
    image: mysql
    container_name: main.mysql
    restart: always
    command: --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password
    
    env_file:
      - ./config/.env.db
     
    ports:
        - "7001:3306" 
    depends_on:
      - rabbitmq


  migration:
    build:
      context: .
      dockerfile: docker/migration/Dockerfile
    command: bash -c "
      python manage.py makemigrations &&      
      python manage.py migrate"
    volumes:
      - .:/django/reputation
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "
      gunicorn reputation.wsgi:application --bind 0.0.0.0:8000" 
    volumes:
      - ./config:/django/reputation/config
    expose:
      - "8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - migration

  celery:    
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A reputation worker --pool=solo -l info"
    volumes:
      - ./config:/django/reputation/config
    environment:
      - BROKER_URL=amqp://jllab001:jllab1122@rabbitmq//
      - CELERY_RESULT_BACKEND = "django-db"    
    depends_on:
      - web

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile-Debug
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/volume/nginx/log:/var/log/nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - celery

volumes:
  mysql_data:  